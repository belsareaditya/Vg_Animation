pipeline {
  agent any

  environment {
    REPO_URL   = 'https://github.com/belsareaditya/Vg_Animation.git'
    BRANCH     = 'main'                   // change if your default branch differs
    IMAGE_NAME = 'your-dockerhub-user/vg_animation'
  }

  stages {
    stage('Clean') {
      steps { cleanWs() }
    }

    stage('Checkout') {
      steps {
        git branch: env.BRANCH, url: env.REPO_URL
      }
    }

    stage('OWASP Dependency-Check') {
      steps {
        // Requires Jenkins OWASP Dependency-Check plugin and a tool installation named 'DP-Check'
        dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit',
                        odcInstallation: 'DP-Check'
        dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
      }
    }

    stage('Docker Build & Push') {
      steps {
        script {
          withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
            def tagLatest = "${IMAGE_NAME}:latest"
            def tagBuild  = "${IMAGE_NAME}:${env.BUILD_NUMBER}"

            sh """
              docker build -t ${tagLatest} -t ${tagBuild} .
              docker push ${tagLatest}
              docker push ${tagBuild}
            """
          }
        }
      }
    }
  }
}
